import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.D53w8jfx.js";const A=JSON.parse('{"title":"第 31 条：不要在文档中重复类型信息","description":"","frontmatter":{},"headers":[],"relativePath":"ch-design/jsdoc-repeat.md","filePath":"ch-design/jsdoc-repeat.md"}'),h={name:"ch-design/jsdoc-repeat.md"};function l(e,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="第-31-条-不要在文档中重复类型信息" tabindex="-1">第 31 条：不要在文档中重复类型信息 <a class="header-anchor" href="#第-31-条-不要在文档中重复类型信息" aria-label="Permalink to &quot;第 31 条：不要在文档中重复类型信息&quot;">​</a></h1><h2 id="要点" tabindex="-1">要点 <a class="header-anchor" href="#要点" aria-label="Permalink to &quot;要点&quot;">​</a></h2><ul><li>避免在注释和变量名里重复写类型信息。最好别和类型声明重复，最差会导致信息冲突。</li><li>参数声明时用 <code>readonly</code>，不要只在注释里说不修改它们。</li><li>如果类型里单位不明确，考虑把单位写进变量名，比如 <code>timeMs</code> 或 <code>temperatureC</code>。</li></ul><h2 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文" aria-label="Permalink to &quot;正文&quot;">​</a></h2><p>下面这段代码有什么问题？</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Returns a string with the foreground color.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Takes zero or one arguments. With no arguments, returns the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * standard foreground color. With one argument, returns the foreground color</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * for a particular page.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getForegroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;login&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">127</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://www.typescriptlang.org/play/?ts=5.4.5#code/PQKhCgAIUglBTALgVwE4DsDOkCGlOKoCW6A5pAO5GIAWkt8kAZgParymovLoAmkAYxYAbNgDooMACo4A1vGwAveF0hs16RjlSlkAW3jpEmMZADq1Ouha4d+w8YA0kdigzYGk-Ihx9t-VnZObj5BEXFzSw0tOwMjZ1c0LHoaRkCOLh5+IVFUL0DcSAAHbUQiAWRhbWKcUngJaGBwJh4BMpZ0SDrEADE2DJDeAGFw1AAKErqAfgAub2IyAEpIAG8oFyQkmrrIAF59yAByUVISQ8gp1dQ5gEYAJgB2Z1Jbx+cAI1eHgF9IOZXrpAAAzPOYgyCfYHfADc4G+4CAA" target="_blank" rel="noreferrer">💻 playground</a></p><p>代码和注释不一致！没有更多上下文很难判断哪个对，但显然有问题。正如我以前一位教授说的：“代码和注释不一致，那它们俩都错！”</p><p>假设代码是期望的行为，注释的问题包括：</p><ul><li>注释说函数返回的是字符串颜色，但实际上返回的是 <code>{r, g, b}</code> 对象。</li><li>注释说明函数接受 0 或 1 个参数，这其实从类型签名里已经很清楚了。</li><li>注释太啰嗦了，反而比函数声明和实现还长！</li></ul><p>TypeScript 的类型注解系统设计得紧凑、描述性强且易读。它的设计者都是有多年经验的语言专家，类型注解几乎总比注释文字更能准确表达函数的输入输出。</p><p>而且类型注解会被编译器检查，永远不会和实现代码脱节。可能以前 <code>getForegroundColor</code> 返回的是字符串，后来改成返回对象，改代码的人忘了更新注释。</p><p>除非强制保持同步，否则注释很容易过时。类型注解就是这种强制同步的“力量”！把类型信息放到注解里，而不是注释里，能大大提高代码演进时的正确性。</p><p>更好的注释写法可能是这样：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 获取应用或指定页面的前景色。 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getForegroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://www.typescriptlang.org/play/?ts=5.4.5#code/PTAEAkEkBEFECgAuBPADgU1AYQPYBscAnUAXlAG9RCAuUAOwFcBbAI3UIG5QBzWx19lxZ9mbYgF8O8EKFgA5aNIBUS0AHF0iUIgAWmAGZF03QjgZ0AJqADG+IqEPFdmAIapUeAJbWXiTzjpQexdQAGcMa099b1BUF250ADpQJWB4fXNrPwCeTQAxIxMzS1wCQgAKOISAflpQxEJPOm4ASlpS+3J4UFAZLAB5AFkABQAlWABlCe6qTQZCQKrMEhXQAHICbia10GqKGlAARgAmAHYAGh5aE4vQYSOz8VBacgOABkveUA+72jfJGYyeSKcTweBAA" target="_blank" rel="noreferrer">💻 playground</a></p><p>如果要说明某个参数，建议用 <code>@param</code> 的 JSDoc 注解，详见第 68 条。</p><p>关于“无变更”的注释也值得怀疑：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** Sort the strings by numeric value (i.e. &quot;2&quot; &lt; &quot;10&quot;). Does not modify nums. */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sortNumerically</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://www.typescriptlang.org/play/?ts=5.4.5#code/PQKhAIGUHsCcBdzwBYFNwGd6wJYDsBzDcAIwE9w8BXAW1VwGNwA3AQwBsr0AKHAOlR9wAIgBMw8AB4RARgAMwgJRCAItFTE80RDWgATHADMK1GhiEhgAKENU8DeDmh5MceADla9HAw7sy3KYYAFyY2PgEANoAuoqhWLiEMeAA3lbg4LCo8FSwLkF8GG7c3KwANKSK4AC8AHzgnjQk9KVVALQNtM2w3CSKigDcVgC+VkA" target="_blank" rel="noreferrer">💻 playground</a></p><p>注释里说这个函数不会修改参数，但数组的 <code>sort</code> 方法是原地排序，实际上是会修改参数的，所以注释说法不靠谱。</p><p>如果你把参数声明成 <code>readonly</code>（参考第 14 条），就可以让 TypeScript 帮你强制执行这个约定：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** Sort the strings by numeric value (i.e. &quot;2&quot; &lt; &quot;10&quot;). */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sortNumerically</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> readonly</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //          ~~~~  ~  ~ Property &#39;sort&#39; does not exist on &#39;readonly string[]&#39;.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://www.typescriptlang.org/play/?ts=5.4.5#code/PQKhAIGUHsCcBdzwBYFNwGd6wJYDsBzDcAIwE9w8BXAW1VwGNwA3AQwBsr0AKHAOlR9wAIgBMw8AB4RARgAMwgJRCQwAFAAzKngbwc0PJjjwAcrXo4GHdmW7UaGAFzhYqVgBMDNzNnwEA2gC6is5YuIRB4ADeauAuqPBUsIb2GHwYxtzcrAA0pIrgALwAfOBmNCT02QUAtGW0lbDcJIqKANyx4MDAcb194AB+QwNxI4PgAAqw0AAO9PAUAOQZCIvgnqjEeNCIqAAeOFjgBuCLrh5eFGF+QYt8agC+akA" target="_blank" rel="noreferrer">💻 playground</a></p><p>这个函数的正确实现，要么复制一份数组，要么用不可变的 <code>toSorted</code> 方法：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** Sort the strings by numeric value (i.e. &quot;2&quot; &lt; &quot;10&quot;). */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sortNumerically</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> readonly</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toSorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ok</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://www.typescriptlang.org/play/?ts=5.4.5#code/PQKhAIGUHsCcBdzwBYFNwGd6wJYDsBzDcAIwE9w8BXAW1VwGNwA3AQwBsr0AKHAOlR9wAIgBMw8AB4RARgAMwgJRCQwAFAAzKngbwc0PJjjwAcrXo4GHdmW7UaGAFzhYqVgBMDNzNnwEA2gC6is5YuIRB4ADeauAuqPBUsIb2GHzw0DAIqO7c3KwANKSK4AC8AHzgZjQk9PklALRVtLWw3CSKigDcccDA4NAA1moAvmpAA" target="_blank" rel="noreferrer">💻 playground</a></p><p>注释里的道理，对变量名同样适用。避免在变量名里写类型信息，比如不要叫 <code>ageNum</code>，直接叫 <code>age</code>，并确保它真的是数字类型。</p><p>唯一例外是带单位的数字。如果单位不明显，可以把单位写进变量名。比如 <code>timeMs</code> 比单纯的 <code>time</code> 更清晰，<code>temperatureC</code> 比 <code>temperature</code> 更明确。第 64 条介绍了“品牌类型（brands）”，这是建模单位更安全的方式。</p><h2 id="关键点总结" tabindex="-1">关键点总结 <a class="header-anchor" href="#关键点总结" aria-label="Permalink to &quot;关键点总结&quot;">​</a></h2><ul><li>避免在注释和变量名里重复写类型信息。最好别和类型声明重复，最差会导致信息冲突。</li><li>参数声明时用 <code>readonly</code>，不要只在注释里说不修改它们。</li><li>如果类型里单位不明确，考虑把单位写进变量名，比如 <code>timeMs</code> 或 <code>temperatureC</code>。</li></ul>`,31)]))}const o=i(h,[["render",l]]);export{A as __pageData,o as default};
